name: Excavator

on:
  pull_request:
    paths:
      - 'bucket/*.json'
  schedule:
    - cron: '0 */6 * * *'  # 6時間ごとに実行
  workflow_dispatch:

jobs:
  excavate:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Scoop
        run: |
          Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser -Force
          iex "& {$(irm get.scoop.sh)} -RunAsAdmin"
          Join-Path (Resolve-Path ~).Path "scoop\shims" >> $Env:GITHUB_PATH
      
      - name: Check for updates
        run: |
          # Scoopのbinディレクトリをパスに追加
          $env:Path = "$env:USERPROFILE\scoop\shims;$env:Path"
          
          # カレントディレクトリをバケットのルートに設定
          Push-Location $env:GITHUB_WORKSPACE
          
          # 各アプリケーションのアップデートをチェック
          $apps = Get-ChildItem ./bucket -Filter *.json | ForEach-Object { $_.BaseName }
          $hasUpdates = $false
          
          foreach ($app in $apps) {
            Write-Host "Checking $app for updates..."
            try {
              # checkverコマンドを実行（-uオプションでマニフェストを更新）
              $output = scoop checkver $app -u 2>&1
              if ($LASTEXITCODE -eq 0) {
                Write-Host "Successfully checked $app"
                if ($output -match "autoupdate") {
                  $hasUpdates = $true
                }
              } else {
                Write-Host "No updates found for $app"
              }
            } catch {
              Write-Host "Error checking $app: $_"
            }
          }
          
          Pop-Location
          
          # アップデートがあった場合のみ成功とする
          if (-not $hasUpdates) {
            Write-Host "No updates found for any apps"
            exit 0
          }
      
      - name: Commit changes
        if: github.event_name != 'pull_request'
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add .
          git diff --cached --exit-code || git commit -m "Update apps"
      
      - name: Push changes
        if: success() && github.event_name != 'pull_request'
        run: git push